# Note: This is a composite GitHub Actions, it should do all env setup, caching an so on, so other pipelines can just compose their own stuff on top of that.
# Docs: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: Setup Environment
inputs:
  nodeVersion:
    description: Node.js version to use
    required: false
    default: 21.2.0
  workingDirectory:
    description: Working directory
    required: false
    default: ./
  pnpmVersion:
    description: Version of pnpm to use
    required: false
    default: 8.10.5
  withCaching:
    description: With Caching
    required: false
    default: true
  frozenMode:
    description: frozen-lockfile / no-frozen-lockfile
    required: false
    default: true
  skipInstallIfCacheFound:
    description: Skip installing dependencies if the cache is found
    required: false
    default: false
runs:
  using: composite
  steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      continue-on-error: true
      with:
        access_token: ${{ github.token }}

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.nodeVersion }}

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: ${{ inputs.pnpmVersion }}
        run_install: false

    - name: Initialize cache hit
      shell: bash
      run: echo "CACHE_HIT=false" >> $GITHUB_ENV

    - name: Get pnpm store directory
      if: inputs.withCaching == 'true'
      shell: bash
      run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      if: inputs.withCaching == 'true'
      name: Setup pnpm cache
      id: pnpm-cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Set cache hit variable
      if: inputs.withCaching == 'true'
      shell: bash
      run: echo "CACHE_HIT=${{ steps.pnpm-cache.outputs.cache-hit }}" >> $GITHUB_ENV

    - name: Install dependencies (frozen-lockfile)
      if: inputs.frozenMode == 'true' && (inputs.skipInstallIfCacheFound != 'true' || env.CACHE_HIT == 'false')
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Install dependencies (no-frozen-lockfile)
      if: inputs.frozenMode == 'false' && (inputs.skipInstallIfCacheFound != 'true' || env.CACHE_HIT == 'false')
      shell: bash
      run: pnpm install --no-frozen-lockfile
